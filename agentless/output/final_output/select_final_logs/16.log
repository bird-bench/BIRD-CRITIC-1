2024-12-11 16:08:58,020 - INFO - ================ running test for 16 ================
2024-12-11 16:08:58,021 - INFO - Running test command:
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,022 - INFO - Running test with:
def test_func(sql, db) -> None:
    issue_sql = '\n    SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif \n    FROM backup_colour \n    WHERE dif = 0;\n    '
    try:
        (result, conn) = perform_query_on_mysql_databases(issue_sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        assert len(result) == 0, 'Expected no rows due to the error, but got some rows.'
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,041 - INFO - Test output:
Issue reproduced

2024-12-11 16:08:58,045 - INFO - Running test command:
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,046 - INFO - Running test with:
def test_func(sql, db) -> None:
    issue_sql = '\n    SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif \n    FROM backup_colour \n    WHERE dif = 0;\n    '
    try:
        (result, conn) = perform_query_on_mysql_databases(issue_sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        assert len(result) == 0, 'Expected no rows due to the error, but got some rows.'
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,058 - INFO - Test output:

2024-12-11 16:08:58,059 - INFO - Running test command:
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,060 - INFO - Running test with:
def test_func(sql, db) -> None:
    issue_sql = '\n    SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif \n    FROM backup_colour \n    WHERE dif = 0;\n    '
    try:
        (result, conn) = perform_query_on_mysql_databases(issue_sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        assert len(result) == 0, 'Expected no rows due to the error, but got some rows.'
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,071 - INFO - Test output:

2024-12-11 16:08:58,072 - INFO - Running test command:
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,073 - INFO - Running test with:
def test_func(sql, db) -> None:
    issue_sql = '\n    SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif \n    FROM backup_colour \n    WHERE dif = 0;\n    '
    try:
        (result, conn) = perform_query_on_mysql_databases(issue_sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        assert len(result) == 0, 'Expected no rows due to the error, but got some rows.'
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,089 - INFO - Test output:
Issue resolved

2024-12-11 16:08:58,089 - INFO - Running test command:
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,090 - INFO - Running test with:
def test_func(sql, db) -> None:
    try:
        query = '\n        SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif \n        FROM backup_colour \n        WHERE dif = 0;\n        '
        (result, conn) = perform_query_on_mysql_databases(query, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        expected_result = []
        assert result == expected_result
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,103 - INFO - Test output:

2024-12-11 16:08:58,104 - INFO - Running test command:
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,104 - INFO - Running test with:
def test_func(sql, db) -> None:
    issue_sql = '\n    SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif \n    FROM backup_colour \n    WHERE dif = 0;\n    '
    try:
        (result, conn) = perform_query_on_mysql_databases(issue_sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        assert len(result) == 0, 'Expected no rows due to the error, but got some rows.'
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('WITH CalculatedDif AS (SELECT Count, (Count - LAG(Count, 1) OVER (ORDER BY Id)) AS dif FROM backup_colour) SELECT Count, dif FROM CalculatedDif WHERE dif = 0', 'codebase_community')
2024-12-11 16:08:58,118 - INFO - Test output:

2024-12-11 16:08:58,118 - INFO - No solutions resolved the issue.
2024-12-11 16:08:58,269 - INFO - ================ re-ranking solutions for 16 ================
2024-12-11 16:08:58,270 - INFO - No valid parsed solutions found.
