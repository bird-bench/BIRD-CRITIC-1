2024-12-11 16:08:58,054 - INFO - ================ running test for 23 ================
2024-12-11 16:08:58,055 - INFO - Running test command:
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,055 - INFO - Running test with:
def test_func(sql, db) -> None:
    try:
        (result, conn) = perform_query_on_mysql_databases(sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        for row in result:
            if row[1] != 19:
                raise AssertionError('Data from other races found')
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,074 - INFO - Test output:
Issue reproduced

2024-12-11 16:08:58,076 - INFO - Running test command:
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,078 - INFO - Running test with:
def test_func(sql, db) -> None:
    try:
        (result, conn) = perform_query_on_mysql_databases(sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        for row in result:
            if row[1] != 19:
                raise AssertionError('Data from other races found')
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,095 - INFO - Test output:
Issue reproduced

2024-12-11 16:08:58,096 - INFO - Running test command:
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,096 - INFO - Running test with:
def test_func(sql, db) -> None:
    try:
        (result, conn) = perform_query_on_mysql_databases(sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        for row in result:
            if row[1] != 19:
                raise AssertionError('Data from other races found')
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,110 - INFO - Test output:
Issue reproduced

2024-12-11 16:08:58,111 - INFO - Running test command:
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,112 - INFO - Running test with:
def test_func(sql, db) -> None:
    try:
        (result, conn) = perform_query_on_mysql_databases(sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        for row in result:
            if row[1] != 19:
                raise AssertionError('Data from other races found')
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,127 - INFO - Test output:
Difference between left join and inner join counts: 25
Issue reproduced
Issue resolved

2024-12-11 16:08:58,129 - INFO - Running test command:
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,129 - INFO - Running test with:
def test_func(sql, db) -> None:
    try:
        (result, conn) = perform_query_on_mysql_databases(sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    for row in result:
        if row[1] != 19:
            print('Issue reproduced')
            return
    print('Issue resolved')
    return
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,140 - INFO - Test output:
Issue resolved

2024-12-11 16:08:58,142 - INFO - Running test command:
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,142 - INFO - Running test with:
def test_func(sql, db) -> None:
    try:
        (result, conn) = perform_query_on_mysql_databases(sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        for row in result:
            if row[1] != 19:
                raise AssertionError('Data from other races found')
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,154 - INFO - Test output:
Difference between left join and inner join counts: 25
Issue reproduced

2024-12-11 16:08:58,155 - INFO - Running test command:
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,156 - INFO - Running test with:
def test_func(sql, db) -> None:
    try:
        (result, conn) = perform_query_on_mysql_databases(sql, db)
    except Exception as e:
        print('Issue reproduced')
        return
    try:
        for row in result:
            if row[1] != 19:
                raise AssertionError('Data from other races found')
        print('Issue resolved')
    except AssertionError:
        print('Issue reproduced')
        return
test_func('SELECT s.driverStandingsId, s.raceId, d.driverId FROM driverStandings AS s LEFT JOIN drivers AS d ON d.driverId = s.driverId WHERE s.raceId = 19', 'formula_1')
2024-12-11 16:08:58,166 - INFO - Test output:
Issue reproduced

2024-12-11 16:08:58,167 - INFO - No solutions resolved the issue.
2024-12-11 16:08:58,271 - INFO - ================ re-ranking solutions for 23 ================
2024-12-11 16:08:58,271 - INFO - No valid parsed solutions found.
